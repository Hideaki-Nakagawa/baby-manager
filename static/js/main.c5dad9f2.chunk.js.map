{"version":3,"sources":["logo.svg","component/atoms/InputField.tsx","component/molecules/HeightInputField.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","margin","spacing","withoutLabel","marginTop","InputField","props","useState","myText","setText","classes","FormControl","className","clsx","addClass","Size","FormHelperText","id","titleId","titleText","Input","value","onChange","event","newValue","target","startAdornment","icon","fontType","fontIconName","endAdornment","InputAdornment","position","unitText","aria-describedby","inputProps","maxLength","areaLabel","width","HeightInputField","library","add","fab","fas","far","App","createMuiTheme","palette","type","responseGoogle","response","console","log","ThemeProvider","CssBaseline","src","logo","alt","href","rel","clientId","buttonText","onSuccess","onFailure","cookiePolicy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,G,MAAA,IAA0B,kC,8ICQnCA,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,OAAQ,CACJA,OAAQF,EAAMG,QAAQ,IAE1BC,aAAc,CACVC,UAAWL,EAAMG,QAAQ,SA8DtBG,EApCI,SAACC,GAAkB,MAGRC,mBAAS,IAHD,mBAG3BC,EAH2B,KAGnBC,EAHmB,KAe5BC,EAAUb,IAEhB,OACI,eAACc,EAAA,EAAD,CAAaC,UAAWC,YAAKH,EAAQT,OAAQS,EAAQP,aAAcG,EAAMQ,SAASC,MAAlF,UACI,cAACC,EAAA,EAAD,CAAgBC,GAAIX,EAAMY,QAA1B,SAAoCZ,EAAMa,YAC1C,cAACC,EAAA,EAAD,CACIH,GAAIX,EAAMW,GACVI,MAAOb,EACPc,SAdS,SAACC,GAClB,IAAMC,EAAWD,EAAME,OAAOJ,MAC9BZ,EAAQe,IAaAE,eAAgB,cAAC,IAAD,CAAiBC,KAAQ,CAACrB,EAAMsB,SAAWtB,EAAMuB,gBACjEC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SAAgC1B,EAAM2B,WACpDC,mBAAkB5B,EAAMY,QACxBiB,WAAY,CACR,UAAa7B,EAAM8B,UACnB,aAAc9B,EAAM+B,iBCjElCxC,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT,KAAQ,CACJsC,MAAO,aAyBJC,EAnBU,WAGrB,IAAM7B,EAAyBb,IAE/B,OACI,cAAC,EAAD,CACIiB,SAAUJ,EACVQ,QAAQ,eACRC,UAAU,eACVF,GAAG,eACHgB,SAAS,KACTG,UAAW,EACXC,UAAU,SACVT,SAAW,MACXC,aAAe,Y,iBCjB3BW,IAAQC,IAAIC,IAAKC,IAAKC,KA6CPC,MA3Cf,WACE,IAAM9C,EAAgB+C,YAAe,CACnCC,QAAS,CACPC,KAAM,UAMJC,EAAiB,SAACC,GACtBC,QAAQC,IAAIF,IAGd,OACE,eAACG,EAAA,EAAD,CAAetD,MAAOA,EAAtB,UACE,cAACuD,EAAA,EAAD,IACA,qBAAK1C,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAK2C,IAAKC,EAAM5C,UAAU,WAAW6C,IAAI,SACzC,sCACO,+CADP,0BAGA,mBACE7C,UAAU,WACV8C,KAAK,sBACLjC,OAAO,SACPkC,IAAI,sBAJN,yBAQA,cAAC,EAAD,IACA,cAAC,IAAD,CACEC,SAAS,QACTC,WAAW,QACXC,UAAWb,EACXc,UAAWd,EACXe,aAAc,gCCnCXC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c5dad9f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Theme, createStyles, makeStyles, FormControl, FormHelperText, Input, InputAdornment} from '@material-ui/core';\r\nimport { ClassNameMap } from '@material-ui/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-common-types';\r\n\r\n/** @summary style define*/\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        withoutLabel: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    }),\r\n);\r\n\r\n\r\n/**\r\n * 引数\r\n */\r\ntype Props = {\r\n    id: string\r\n    titleId : string \r\n    titleText : string\r\n    unitText : string\r\n    maxLength : number\r\n    areaLabel : string\r\n    fontType : IconPrefix\r\n    fontIconName : IconName\r\n    addClass : ClassNameMap\r\n}\r\n\r\n/**\r\n * インプトフィールド コンポーネント\r\n * @param props \r\n * @returns \r\n */\r\nconst InputField = (props : Props) => {\r\n\r\n    /** @summary state hook */\r\n    const [myText, setText] = useState('');\r\n\r\n    /** \r\n     * @summary state change \r\n     * @details ステートを変更して、親要素に値を投げる\r\n     */\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = event.target.value;\r\n        setText(newValue);\r\n    };\r\n\r\n    /** @summary style hook api */\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl className={clsx(classes.margin, classes.withoutLabel, props.addClass.Size)}>\r\n            <FormHelperText id={props.titleId}>{props.titleText}</FormHelperText>\r\n            <Input\r\n                id={props.id}\r\n                value={myText}\r\n                onChange={handleChange}\r\n                startAdornment={<FontAwesomeIcon icon = {[props.fontType , props.fontIconName]} />}\r\n                endAdornment={<InputAdornment position=\"end\">{props.unitText}</InputAdornment>}\r\n                aria-describedby={props.titleId}\r\n                inputProps={{\r\n                    'maxLength': props.maxLength,\r\n                    'aria-label': props.areaLabel,\r\n                }}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default InputField;\r\n","import { InputField } from '../atoms';\r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core';\r\nimport { ClassNameMap } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme : Theme) =>\r\n    createStyles({\r\n        \"Size\": {\r\n            width: \"10em\",\r\n        }\r\n    }),\r\n);\r\n\r\n/** 身長入力フィールド コンポーネント */\r\nconst HeightInputField = () => {\r\n\r\n    /** @summary style hook api */\r\n    const classes : ClassNameMap = useStyles();\r\n\r\n    return (\r\n        <InputField\r\n            addClass={classes}\r\n            titleId=\"height_title\"\r\n            titleText=\"身長\"\r\n            id=\"height_input\"\r\n            unitText=\"cm\"\r\n            maxLength={6}\r\n            areaLabel=\"height\"\r\n            fontType = \"fab\"\r\n            fontIconName = \"github\"\r\n        />\r\n    )\r\n}\r\nexport default HeightInputField;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { createMuiTheme, CssBaseline, Theme, ThemeProvider } from '@material-ui/core';\nimport { library } from '@fortawesome/fontawesome-svg-core'; //fontawesomeのコアファイル\nimport { fab } from '@fortawesome/free-brands-svg-icons'; //fontawesomeのbrandアイコンのインポート\nimport { fas } from '@fortawesome/free-solid-svg-icons'; //fontawesomeのsolidアイコンのインポート\nimport { far } from '@fortawesome/free-regular-svg-icons'; //fontawesomeのregularアイコンのインポート\nimport { HeightInputField } from './component/molecules';\nimport GoogleLogin, { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\n\nlibrary.add(fab, fas, far); //他のコンポーネントから簡単に呼び出せるようにするための登録処理\n\nfunction App() {\n  const theme : Theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      //type: 'light',\n    }\n  })\n\n  /** Googleアカウントの認証結果をコンソールに出力 */\n  const responseGoogle = (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n    console.log(response);\n  }\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n        </a>\n          <HeightInputField />\n          <GoogleLogin\n            clientId=\"dummy\"\n            buttonText=\"Login\"\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            cookiePolicy={'single_host_origin'}/>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}